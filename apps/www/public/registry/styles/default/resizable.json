{
  "name": "resizable",
  "dependencies": [
    "@udecode/plate-resizable"
  ],
  "registryDependencies": [],
  "files": [
    {
      "name": "resizable.tsx",
      "content": "'use client';\n\nimport React, { ComponentProps } from 'react';\nimport {\n  Resizable as ResizablePrimitive,\n  ResizeHandle as ResizeHandlePrimitive,\n} from '@udecode/plate-resizable';\nimport { cva, VariantProps } from 'class-variance-authority';\n\nimport { cn } from '@/lib/utils';\n\nconst resizeHandleVariants = cva(\n  cn(\n    'absolute top-0 z-10 flex h-full w-6 select-none flex-col justify-center',\n    'after:flex after:h-16 after:bg-ring after:opacity-0 group-hover:after:opacity-100',\n    \"after:w-[3px] after:rounded-[6px] after:content-['_']\"\n  ),\n  {\n    variants: {\n      direction: {\n        left: '-left-3 -ml-3 cursor-col-resize pl-3',\n        right: '-right-3 -mr-3 cursor-col-resize items-end pr-3',\n        top: 'cursor-row-resize',\n        bottom: 'cursor-row-resize',\n      },\n    },\n  }\n);\n\nconst ResizeHandle = React.forwardRef<\n  React.ElementRef<typeof ResizeHandlePrimitive>,\n  ComponentProps<typeof ResizeHandlePrimitive> &\n    Omit<VariantProps<typeof resizeHandleVariants>, 'direction'>\n>(({ className, ...props }, ref) => (\n  <ResizeHandlePrimitive\n    ref={ref}\n    className={cn(\n      resizeHandleVariants({ direction: props.options?.direction }),\n      className\n    )}\n    {...props}\n  />\n));\nResizeHandle.displayName = 'ResizeHandle';\n\nconst resizableVariants = cva('', {\n  variants: {\n    align: {\n      left: 'mr-auto',\n      center: 'mx-auto',\n      right: 'ml-auto',\n    },\n  },\n  defaultVariants: {\n    align: 'center',\n  },\n});\n\nconst Resizable = React.forwardRef<\n  React.ElementRef<typeof ResizablePrimitive>,\n  ComponentProps<typeof ResizablePrimitive> &\n    VariantProps<typeof resizableVariants>\n>(({ className, align, ...props }, ref) => (\n  <ResizablePrimitive\n    ref={ref}\n    className={cn(resizableVariants({ align }), className)}\n    {...props}\n  />\n));\nResizable.displayName = 'Resizable';\n\nexport { Resizable, ResizeHandle };\n"
    }
  ],
  "type": "components:plate-ui"
}